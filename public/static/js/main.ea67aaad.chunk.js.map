{"version":3,"sources":["helpers/fetch.js","types/types.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","helpers/prepareEvents.js","actions/event.js","components/ui/NavBar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","components/router/PublicRouter.js","components/router/PrivateRouter.js","components/router/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseURL","process","fetchWhithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWhithToken","token","localStorage","getItem","types","login","user","type","payload","checkCheckingFinish","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rEmail","rPassword1","rName","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","e","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","console","log","prepareEvents","events","map","event","end","moment","toDate","start","eventAddNew","eventClearActiveEvent","updated","eventDeleted","eventStartLoading","eventLoaded","NavBar","useSelector","state","auth","onClick","clear","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","startDate","minutes","seconds","add","endDate","clone","initEvent","notes","CalendarModal","modalOpen","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","contentLabel","momentStart","momentEnd","isSameOrAfter","trim","length","id","getState","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","ui","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRouter","isAuthenticated","Component","component","rest","props","to","PrivateRouter","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ea67aaad.chunk.js","sourcesContent":["const baseURL = process.env.REACT_APP_API;\n\nconst fetchWhithoutToken = (endpoint, data, method = 'GET') => {\n    const url = `${baseURL}/${endpoint}`;\n\n    if(method === 'GET'){\n        return fetch(url);\n    }else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data)\n        });\n    }\n};\n\nconst fetchWhithToken = (endpoint, data, method = 'GET') => {\n    const url = `${baseURL}/${endpoint}`;\n    const token = localStorage.getItem('token');\n\n    if(method === 'GET'){\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        });\n    }else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-Type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify(data)\n        });\n    }\n};\n\nexport {\n    fetchWhithoutToken,\n    fetchWhithToken\n};","export const types = {\n    uiOpenModal: '[UI] Open modal',\n    uiCloseModal: '[UI] Close modal',\n\n    eventSetActive: '[EVENT] Set Active',\n    eventStartAddNew: '[EVENT] Start Add New',\n    eventAddNew: '[EVENT] Add New',\n    eventClearActiveEvent: '[EVENT] Clear Active Event',\n    eventUpdated: '[EVENT] Event Updated',\n    eventDeleted: '[EVENT] Event Deleted',\n    eventLoaded: '[EVENT] Event Loaded',\n    eventLogout: '[EVENT] Events Clear',\n\n    authCheking: '[AUTH] Checking Loading State',\n    authChekingFinish: '[AUTH] Checking Finish Loading State',\n    authStartLogin: '[AUTH] Start Login',\n    authLogin: '[AUTH] Login',\n    authStartRegister: '[AUTH] Start Register',\n    authStartTokenRenew: '[AUTH] Start Token Renew',\n    authLogout: '[AUTH] Logout'\n};","import Swal from \"sweetalert2\";\nimport { fetchWhithoutToken, fetchWhithToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\n\nexport const startLogin = (email, password) => {\n    return async(dispatch) => {\n        //console.log(email, password);\n        const resp = await fetchWhithoutToken('auth', {email, password}, 'POST');\n        const body = await resp.json();\n        //console.log(body);\n\n        if(body.ok){\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n        }\n    };\n};\n\nexport const startRegister = (email, password, name) => {\n    return async(dispatch) => {\n        const resp = await fetchWhithoutToken('auth/new', {email, password, name}, 'POST');\n        const body = await resp.json();\n        console.log(body);\n\n        if(body.ok){\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n        }\n    };\n};\n\nexport const startChecking = () => {\n    return async(dispatch) => {\n        const resp = await fetchWhithToken('auth/renew');\n        const body = await resp.json();\n        console.log(body);\n\n        if(body.ok){\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }));\n        }else{\n            //Swal.fire('Error', body.msg, 'error');\n            dispatch(checkCheckingFinish());\n        }\n\n    };\n};\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        localStorage.clear();\n        dispatch(logout());\n    };\n}\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nconst checkCheckingFinish = () => ({\n    type: types.authChekingFinish\n});\n\nconst logout = () => ({type: types.authLogout});","import { useState } from 'react';\n\n\nexport const useForm = ( initialState = {} ) => {\n    \n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues( initialState );\n    }\n\n\n    const handleInputChange = ({ target }) => {\n\n        setValues({\n            ...values,\n            [ target.name ]: target.value\n        });\n\n    }\n\n    return [ values, handleInputChange, reset ];\n\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n    const dispatch = useDispatch();\n    const [formLoginValues, handleLoginInputChange] = useForm({\n        lEmail: 'email@email.com',\n        lPassword: '123456',\n    });\n\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\n        rEmail: 'email@email.com',\n        rPassword1: '123456',\n        rName: 'Alvaro',\n        rPassword2: '123456'\n    });\n\n    const {lEmail, lPassword} = formLoginValues;\n    const { rEmail, rPassword1, rPassword2, rName } = formRegisterValues;\n\n    const hanldeLogin = (e) => {\n        e.preventDefault();\n        //console.log(formLoginValues);\n        dispatch(startLogin(lEmail, lPassword));\n    };\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n        if(rPassword1 !== rPassword2){\n            return Swal.fire('Error', 'Las contraseñas son diferentes', 'error');\n        }\n\n        dispatch(startRegister(rEmail, rPassword1, rName));\n    };\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={hanldeLogin} >\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={lEmail}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={lPassword}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister} >\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={rName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={rEmail}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"rPassword1\"\n                                value={rPassword1}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\"\n                                name=\"rPassword2\"\n                                value={rPassword2}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" \n                            />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};","import moment from 'moment';\n\n//funcion para pasar de string a fechas\nexport const prepareEvents = (events = []) => {\n    return events.map(\n        (event) => ({\n            ...event,\n            //con esa instancia moment convierte un string a formato de fecha\n            end: moment(event.end).toDate(),\n            start: moment(event.start).toDate()\n        })\n    )\n};","import Swal from \"sweetalert2\";\nimport { fetchWhithToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\nexport const eventStartAddNew = (event) => {\n    return async(dispatch, getState) => {\n        //console.log(event);\n        const {uid, name} = getState().auth;\n        try {\n            const resp = await fetchWhithToken('events', event, 'POST');\n            const body = await resp.json();\n            console.log(body);\n            \n            if(body.ok){\n                event.id = body.event.id\n                event.user = {\n                    _id: uid,\n                    name\n                };\n\n                console.log(event);\n                dispatch(eventAddNew(event));\n                dispatch(eventStartLoading());\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    };\n};\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n});\n\nexport const eventStartUpdated = (event) => {\n    return async(dispatch) => {\n        //console.log(event);\n        try {\n            const resp = await fetchWhithToken(`events/${event.id}`, event, 'PUT');\n            const body = await resp.json();\n\n            if(body.ok){\n                dispatch(updated(event));\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n            }\n            \n        } catch (error) {\n            console.log(error);\n        }\n    };\n};\n\nconst updated = (event) => ({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const eventStartDelete = (event) => {\n    return async(dispatch, getState) => {\n        const {id} = getState().calendar.activeEvent\n        try {\n            const resp = await fetchWhithToken(`events/${id}`, {}, 'DELETE');\n            const body = await resp.json();\n            \n            if(body.ok){\n                dispatch(eventDeleted());\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n\n\n    };\n};\n\nconst eventDeleted = () => ({\n    type: types.eventDeleted\n});\n\nexport const eventStartLoading = () => {\n    return async(dispatch) => {\n        const resp = await fetchWhithToken('events');\n        const body = await resp.json();\n        //console.log(body);\n\n        const events = prepareEvents(body.events);\n        console.log(events);\n\n        //dispatch(eventLoaded(body.events));\n        dispatch(eventLoaded(events));\n    };\n};\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n});\n\nexport const clearEvents = () => ({type: types.eventLogout});","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startLogout } from '../../actions/auth';\nimport { clearEvents } from '../../actions/event';\n\nexport const NavBar = () => {\n    const dispatch = useDispatch();\n    const {name} = useSelector(state => state.auth);\n\n    const handleLogout = () => {\n        console.log('Salir');\n        dispatch(startLogout());\n        dispatch(clearEvents());\n    };\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-5\">\n            <span className=\"navbar-brand\">\n                {name}\n            </span>\n\n            <button \n                className=\"btn btn-outline-danger\"\n                onClick={handleLogout}\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n            \n        </div>\n    )\n}\n","import React from 'react'\n\nexport const CalendarEvent = ({event}) => {\n    //console.log(event);\n    const {title, user} = event\n    return (\n        <div>\n            <span>{title}</span>\n            {/* <strong>-{user.name}</strong> */}\n        </div>\n    );\n};\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({\n    type: types.uiOpenModal\n});\n\nexport const uiCloseModal = () => ({\n    type: types.uiCloseModal\n});","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdated } from '../../actions/event';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n//el id appElement es el root del index.js\nModal.setAppElement('#root');\n\nconst startDate = moment().minutes(0).seconds(0).add(1, 'hours');\nconst endDate = startDate.clone().add(1, 'hours');\n\nconst initEvent = {\n  title: '',\n  notes: '',\n  start: startDate.toDate(),\n  end: endDate.toDate()\n};\n\nexport const CalendarModal = ({modalOpen}) => {\n  const dispatch = useDispatch();\n  const {activeEvent} = useSelector(state => state.calendar)\n  const [dateStart, setDateStart] = useState(startDate.toDate());\n  const [dateEnd, setDateEnd] = useState(endDate.toDate());\n  //const [isOpen, setIsOpen] = useState(false);\n  const [titleValid, setTitleValid] = useState(true);\n  const [formValues, setFormValues] = useState(initEvent);\n\n  const { title, notes, start, end } = formValues;\n\n  useEffect(() => {\n    if(activeEvent !== null){\n      setFormValues(activeEvent);\n    }else{\n      setFormValues(initEvent);\n    }\n  }, [activeEvent, setFormValues]);\n\n  const handleInputChange = ({ target }) => {\n    setFormValues({\n      ...formValues,\n      [target.name]: target.value\n    });\n  };\n\n\n  const closeModal = () => {\n    console.log('closing...');\n    //setIsOpen(false);\n    dispatch(uiCloseModal());\n    setFormValues(initEvent);\n    dispatch(eventClearActiveEvent());\n  };\n\n  const handleStartDateChange = (e) => {\n    console.log(e);\n    setDateStart(e);\n    setFormValues({\n      ...formValues,\n      start: e\n    });\n  };\n\n  const handleEndDateChange = (e) => {\n    console.log(e);\n    setDateEnd(e);\n    setFormValues({\n      ...formValues,\n      end: e\n    });\n  };\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n    //console.log(formValues);\n    //pasamos las fechas a un formato de moment para usar las funciones de comparaciones de fechas de la libreria\n    const momentStart = moment(start);\n    const momentEnd = moment(end);\n\n    //validacion de que la fecha final sea mayor que la inicial\n    if(momentStart.isSameOrAfter(momentEnd)){\n      //console.log('Fecha end debe ser mayor');\n      return Swal.fire('Error', 'La fecha de finalización debe ser mayor a la fecha de inicio', 'error');\n    }\n\n    if(title.trim().length < 2){\n      return setTitleValid(false);\n    }\n\n    //preguntamos si hay una nota activa ya que ahi tenemos toda la informacion almacenada, y los datos nuevos se encontraran en el formValues\n    if(activeEvent){\n      dispatch(eventStartUpdated(formValues));\n    }else{\n      //Para agregar un nuevo evento\n      dispatch(eventStartAddNew({\n        ...formValues\n        //no se envian los siguientes datos por lo que esos vienen de la base de datos\n        // id: new Date().getTime(),\n        // user: {\n        //   _id: '123',\n        //   name: 'Alvaro'\n        // }\n      }));\n    }\n\n\n    //si pasa la validacion entonces el el titulo es valido y deja la caja en verde, luego se llama la funcion closeModal()\n    //para cerrar el modal\n    setTitleValid(true);\n    closeModal();\n  };\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      //   onAfterOpen={afterOpenModal}\n      onRequestClose={closeModal}\n      //añade estilos para centrar el modal\n      style={customStyles}\n      //hace de fadeout para que no haya un cierre tan brusco del modal\n      closeTimeoutMS={200}\n      className=\"modal\"\n      //una clase para el fondo detras del modal\n      overlayClassName=\"modal-fondo\"\n      contentLabel=\"Example Modal\"\n    >\n      <h1> {(activeEvent) ? 'Editar Evento' : 'Nuevo Evento'} </h1>\n      <hr />\n      <form \n        className=\"container\"\n        onSubmit={handleSubmitForm}\n      >\n\n        <div className=\"form-group\">\n          <label>Fecha y hora inicio</label>\n          <DateTimePicker\n            onChange={handleStartDateChange}\n            value={dateStart}\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Fecha y hora fin</label>\n          <DateTimePicker\n            onChange={handleEndDateChange}\n            value={dateEnd}\n            minDate={dateStart}\n            className=\"form-control\"\n          />\n        </div>\n\n        <hr />\n        <div className=\"form-group\">\n          <label>Titulo y notas</label>\n          <input\n            type=\"text\"\n            className={`form-control ${!titleValid && 'is-invalid'}`}\n            placeholder=\"Título del evento\"\n            name=\"title\"\n            autoComplete=\"off\"\n            value={title}\n            onChange={handleInputChange}\n          />\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n        </div>\n\n        <div className=\"form-group\">\n          <textarea\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Notas\"\n            rows=\"5\"\n            name=\"notes\"\n            value={notes}\n            onChange={handleInputChange}\n          ></textarea>\n          <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-outline-primary btn-block\"\n        >\n          <i className=\"far fa-save\"></i>\n          <span> Guardar</span>\n        </button>\n\n      </form>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n    const dispatch = useDispatch();\n\n    const handleClick = () => {\n        dispatch(uiOpenModal());\n    };\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={handleClick}\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/event';\n\nexport const DeleteEventFab = () => {\n    const dispatch = useDispatch();\n\n    const handleDelete = () => {\n        dispatch(eventStartDelete());\n    };\n\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={handleDelete}\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar Evento</span>\n        </button>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport moment from 'moment';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport { NavBar } from '../ui/NavBar';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/event';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\n\n//estos son los eventos que e le mandan a Calendar para que se visualicen. Cumplen con la sgte estructura\n// const events = [{\n//     title: 'Cumpleaños mio',\n//     start: moment().toDate(),\n//     end: moment().add(2, 'hours').toDate(),\n//     bgcolor: '#fafafa',\n//     user: {\n//         _id: '123',\n//         name: 'Alvaro'\n//     }\n// }];\n\n\nexport const CalendarScreen = () => {\n    const dispatch = useDispatch();\n    const {events, activeEvent} = useSelector(state => state.calendar);\n    const {modalOpen} = useSelector(state => state.ui);\n    const {uid} = useSelector(state => state.auth)\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n    useEffect(() => {\n        dispatch(eventStartLoading());\n    }, [dispatch])\n\n    const onDoubleClick = (e) => {\n        //imprime el evento que ocurre cuando se le da doble click sobre el evento en el calendario\n        //console.log(e);\n        console.log('Abriendo Modal');\n        dispatch(uiOpenModal());\n    };\n\n    const onSelectEvent = (e) => {\n        //el evento se dispara cuando se le da un solo click al evento de calendario\n        //console.log(e);\n        dispatch(eventSetActive(e));\n        //dispatch(uiOpenModal());\n    };\n\n    const onViewChange = (e) => {\n        //el evento se dispara cuando se cambia de ventana (semana, dia, mes, año)\n        console.log(e);\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n        console.log(lastView);\n    };\n\n    const onSelectSlot = (e) => {\n        console.log(e);\n        dispatch(eventClearActiveEvent());\n    }\n\n    const eventStyleGetter = (event, start, end, isSelected) => {\n        const style = {\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n        };\n\n        return {style};\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <NavBar />\n\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                eventPropGetter={eventStyleGetter}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectEvent={onSelectEvent}\n                onView={onViewChange}\n                onSelectSlot={onSelectSlot}\n                //se necesita para llamar al onSelectSlot\n                selectable={true}\n                view={lastView}\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n            <CalendarModal modalOpen={modalOpen} />\n\n            <AddNewFab />\n            { (activeEvent) && <DeleteEventFab /> }\n        </div>\n    );\n};\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PublicRouter = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (!isAuthenticated)\n                    ? <Component {...props} />\n                    : <Redirect to=\"/\" />\n            )}\n        />\n    );\n};\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRouter = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated)\n                    ? <Component {...props} />\n                    : <Redirect to=\"/login\" />\n            )}\n        />\n    );\n};","import React, { useEffect } from 'react';\nimport { LoginScreen } from '../auth/LoginScreen';\nimport { CalendarScreen } from '../calendar/CalendarScreen';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { startChecking } from '../../actions/auth';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from 'react-router-dom';\nimport { PublicRouter } from './PublicRouter';\nimport { PrivateRouter } from './PrivateRouter';\n\nexport const AppRouter = () => {\n    //aca nos aseguramos si el token sigue siendo valida para ver si el usuario esta autenticado o no\n    const dispatch = useDispatch();\n    const {checking, uid} = useSelector(state => state.auth);\n    //console.log(checking);\n\n    useEffect(() => {\n        dispatch(startChecking());\n    }, [dispatch]);\n\n    if(checking){\n        return (<h5>Espere...</h5>);\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRouter\n                        exact\n                        path=\"/login\"\n                        component={LoginScreen}\n                        isAuthenticated={!!uid}\n                    />\n                    <PrivateRouter\n                        exact\n                        path=\"/\"\n                        component={CalendarScreen}\n                        isAuthenticated={!!uid}\n                    />\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    );\n};\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true\n}\n\nexport const authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.authLogin:\n            return {\n                ...state,\n                checking: false,\n                ...action.payload\n            };\n\n        case types.authChekingFinish:\n            return {\n                ...state,\n                checking: false\n            };\n\n        case types.authLogout:\n            return {\n                checking: false\n            };\n    \n        default:\n            return state;\n    }\n}","//import moment from 'moment';\nimport { types } from '../types/types';\n\nconst initialState = {\n    // events : [\n    //     {\n    //         id: new Date().getTime(),\n    //         title: 'Cumpleaños mio',\n    //         start: moment().toDate(),\n    //         end: moment().add(2, 'hours').toDate(),\n    //         bgcolor: '#fafafa',\n    //         user: {\n    //             _id: '123',\n    //             name: 'Alvaro'\n    //         }\n    //     },\n    events: [],\n    activeEvent: null\n};\n\nexport const calendarReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            };\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [...state.events, action.payload]\n            };\n\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            };\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(e => (e.id === action.payload.id) ? action.payload : e)\n            };\n\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(e => (e.id !== state.activeEvent.id)),\n                activeEvent: null\n            };\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [\n                    ...action.payload\n                ]\n            };\n\n        case types.eventLogout:\n            return initialState;\n                \n        default:\n            return state;\n    }\n};","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            };\n\n        case types.uiCloseModal:\n            return {};\n    \n        default:\n            return state;\n    }\n};","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n});","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { AppRouter } from './components/router/AppRouter';\nimport { store } from './store/store';\n\nconst CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    );\n};\n\nexport default CalendarApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\nimport './styles.css';\n\n//console.log(process.env)\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}